<!DOCTYPE html>
<!-- saved from url=(0033)http://raphaeljs.com/touches.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <meta charset="utf-8">
        <title>Raphaël · Drag-n-drop</title>
        <link rel="stylesheet" href="./Raphaël · Drag-n-drop_files/demo.css" type="text/css" media="screen">
        <meta name="apple-mobile-web-app-capable" content="yes">
        <link rel="apple-touch-icon-precomposed" href="http://raphaeljs.com/Raphael.png">
        <link rel="stylesheet" href="./Raphaël · Drag-n-drop_files/demo-print.css" type="text/css" media="print">
        <script src="./Raphaël · Drag-n-drop_files/raphael.js"></script>
        <script>
            window.onload = function () {
                var R = Raphael(0, 0, "100%", "100%"),
                //battery=R.image("battery.svg",0,300,389,195);
                // battery.rotate(90);   
                  wiret=R.image("wire.svg",500,100,500,80);  
                    r = R.circle(100, 100, 50).attr({fill: "hsb(0, 1, 1)", stroke: "none", opacity: .5});
                   
                var start = function () {
                    this.ox = this.attr("cx");
                    this.oy = this.attr("cy");
                    this.animate({r: 70, opacity: .25}, 500, ">");
                },
                move = function (dx, dy) {
                    this.attr({cx: this.ox + dx, cy: this.oy + dy});
                },
                 startPath = function () {
    this.ox = 0;
    this.oy = 0;
    this.ox1=0;
    this.oy1=0;
  },

                  movePath2 =function(dx1,dy1,w){

    var w1=this.node.getBoundingClientRect();
 //rect.setAttributeNS(null,"transform","translate("+ dx + ", " + dy +")");
                //  this.appendChild(animation); .transition()
  //mySquare.attr("x",320)
  //.duration(1000) // this is 1s
  //.delay(100)
    //battery.animate(
   //{ left:100},100);

    //this.translate(0,-(Math.abs(w1.top-w.bottom)));
    
                  //  battery.attr({x: (w.bottom-300), y:(w.bottom-300)});
    //this.attr({x:(w1.bottom)});

    var trans_x = dx1-this.ox1;
    var trans_y = dy1-this.oy1;
    this.translate(trans_x,trans_y);
   
    this.ox1 = dx1;
    this.oy1 = dy1;},


     up1 = function (dx1,dy1) {
        // restoring state
       var trans_x = dx1-this.ox1;
    var trans_y = dy1-this.oy1;
    this.translate(trans_x,trans_y);
   
    this.ox1 = dx1;
    this.oy1 = dy1;         
    },

                up = function () {
                    this.animate({r: 50, opacity: .5}, 500, ">");
                };
                  wiret.node.onclick = function () { wiret.drag(movePath2,startPath,up1);

    /*wire1.node.onclick = function () { wire1.drag(movePath1,startPath)};*/
    };
  
                R.set(r).drag(move, start, up);
            };
        </script>
    </head>
    <body>
        <div id="holder"></div>
        <p id="copy">Demo of <a href="http://raphaeljs.com/">Raphaël</a>—JavaScript Vector Library</p>
    
<svg height="100%" version="1.1" width="100%" xmlns="http://www.w3.org/2000/svg" style="overflow: hidden; position: absolute; left: 0px; top: 0px;"><desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">Created with Raphaël 2.1.2</desc><defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></defs></svg></body></html>